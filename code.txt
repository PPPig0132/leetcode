public boolean isPalindrome(ListNode head){
    if(head==null || head.next==null){
        return true;
    }
    //新增加一个空的头指针，无论单数还是双数最后慢指针都停留在后一半的pre
    ListNode pre=new ListNode();
    pre.next=head;
    head=pre;
    ListNode end=head; //快指针
    while(end){
        pre=pre.next;
        end=end.next;
        if(end.next!=null){
            end=end.next;
        }
    }
    end=pre.next;
    pre.next=null;
    while(end!=null){
        ListNode temp=end;
        temp.next=pre.next;
        pre.next=temp;
        end=end.next;
    }
    end=pre.next;
    pre=head.next;
    while(end!=null){
        if(end.val!=pre.next){
            break;
        }
    }
    if(end!=null){
        return false;
    }
    return true;


        
    }