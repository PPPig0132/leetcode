 public List<List<String>> groupAnagrams(String[] strs) {
        if(strs.length==0){
            return new ArrayList<>();
        }
        int index=0;//用于更新list中的index
        List<List<String>> ans = new ArrayList<>();
        Map <Integer,Integer> hashtable=new HashMap<Integer,Integer>();
        String [][] subStr=new Sting[100][0];
        for for(int i=0;i<strs.length;i++){
            subStr[strs[i].length].push(strs[i])
        }

        for(int i=0;i<100;i++){
            for(int j=0;j<subStr[i].length;j++){
                int res=getSum(subStr[i]);
                 if(hashtable.containsKey(res)){
                ans.get(hashtable.get(res)).add(subStr[i]);
            }
            else{
                List<String> temp=new ArrayList<>();
                temp.add(subStr[i]);
                ans.add(temp);
            hashtable.put(res,index++);
            }

            }
            hashtable.clear();
        }


        return ans;
        
    }

    public int getSum(String y) {
        int sum = 0;
        for (int i = 0; i < y.length(); i++) {
            sum += y.charAt(i) - 'a';
        }
        return sum;
    }

      Map<Integer, Integer> hashtable = new HashMap<Integer, Integer>();
        for (int i = 0; i < nums.length; ++i) {
            if (hashtable.containsKey(target - nums[i])) {
                return new int[]{hashtable.get(target - nums[i]), i};
            }
            hashtable.put(nums[i], i);
        }
        return new int[0];